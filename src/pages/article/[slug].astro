---
// src/pages/articles/[slug].astro
import type { MarkdownInstance } from 'astro';
import MainLayout from '../../layouts/MainLayout.astro'
import type { ArticleProps } from '../../utils/types';

interface StaticPath {
  params: {
    slug: string;
  };
}

export const prerender = true;

export async function getStaticPaths(): Promise<StaticPath[]> {
  const articles = await Astro.glob('../../content/articles/*.md');
  return articles.map((article) => {
    const slug = article.frontmatter.slug;
    if (!slug) {
      throw new Error(`Article missing slug: ${article.file}`);
    }
    return {
      params: {
        slug,
      },
    };
  });
}

const slug  = Astro.params.slug;

const allArticles: MarkdownInstance<ArticleProps>[] = await Astro.glob('../../content/articles/*.md');
const article = allArticles.find((article) => article.frontmatter.slug === slug)

if (!article) {
  return new Response('Not Found ', { status: 404 }); // Исправлено для правильной обработки 404
}
---

<MainLayout>
  <article class="bg-white w-11/12 flex flex-col items-stretch justify-around">
    <h1 class="self-center font-bold text-3xl">{article.frontmatter.title}</h1>
    <p class="self-center font-bold text-xl">{article.frontmatter.excerpt}</p>
    <p>{article.content}</p>
  </article>
</MainLayout>
